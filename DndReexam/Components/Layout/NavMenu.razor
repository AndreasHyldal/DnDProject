
@using Havit.Blazor.Components
@using DndReexam.Services
@inject AuthService AuthService
@rendermode @(new InteractiveServerRenderMode(prerender: false))

<div class="d-flex border overflow-hidden sidebar-inner" data-bs-theme="dark">
	<HxSidebar>
		<HeaderTemplate>
			<HxSidebarBrand BrandName="Andreas & Alex" BrandNameShort="AA" />
		</HeaderTemplate>

		<ItemsTemplate>
			<HxSidebarItem Text="Dashboard" Icon="BootstrapIcon.Columns" TooltipText="Dashboard" Href="/home" />
			@if (isAdmin)
			{
			<HxSidebarItem Text="Employees" Icon="BootstrapIcon.People" Href="admin/employees">
				<HxSidebarItem Text="Overview" Href="/employees" />
				<HxSidebarItem Text="Absences" Href="/components/HxSidebar/absences" />
			</HxSidebarItem>
			}
		</ItemsTemplate>

        <FooterTemplate>
            <HxSidebarFooter TextCssClass="@(context.SidebarCollapsed ? "d-md-none" : null)" 
                            Text="Logout" 
                            Href="/logout">
                @* <LogoutIcon /> *@
            </HxSidebarFooter>
        </FooterTemplate>
	</HxSidebar>
</div>



@code {
    private bool isAdmin = false;
    private bool hasCheckedRole = false;

	@* protected override async Task OnInitializedAsync() *@
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
		if (firstRender && !hasCheckedRole)
        {
            var role = await AuthService.GetUserRoleAsync();
            isAdmin = role == "Admin";
            hasCheckedRole = true;
			Console.WriteLine(isAdmin);
            StateHasChanged(); // Re-render UI after checking role
        }
    }
}